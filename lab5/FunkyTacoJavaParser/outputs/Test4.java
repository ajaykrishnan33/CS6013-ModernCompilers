class Test4 { 
public static void main ( String [ ] args ) { 
Child p10 ; 
int q11 ; 
int Test4_m1418 ; 
int Test4_a1219 ; 
int Test4_y1320 ; 
Child main_Child_temp21 ; 
int main_Child_temp22 ; 
int int_temp1 ;
int int_temp2 ;
int int_temp3 ;
int int_temp4 ;
boolean boolean_temp1 ;
boolean boolean_temp2 ;
boolean boolean_temp3 ;
boolean boolean_temp4 ;
int[] intarr_temp1 ;
int[] intarr_temp2 ;
int[] intarr_temp3 ;
int[] intarr_temp4 ;
Wild Wild_temp1 ;
Wild Wild_temp2 ;
Wild Wild_temp3 ;
Wild Wild_temp4 ;
Parent Parent_temp1 ;
Parent Parent_temp2 ;
Parent Parent_temp3 ;
Parent Parent_temp4 ;
Test4 Test4_temp1 ;
Test4 Test4_temp2 ;
Test4 Test4_temp3 ;
Test4 Test4_temp4 ;
Child Child_temp1 ;
Child Child_temp2 ;
Child Child_temp3 ;
Child Child_temp4 ;
Child_temp1 = new Child();
p10 = Child_temp1;
int_temp1 = 5;
q11 = int_temp1;
Test4_a1219 = q11;
main_Child_temp21 = p10 ; 
int_temp1 = 2;
Test4_y1320 = int_temp1;
int_temp1 = Test4_y1320 * Test4_a1219 ; 
Test4_m1418 = int_temp1;
int_temp1 = 1;
Test4_y1320 = int_temp1;
int_temp1 = Test4_m1418 + Test4_y1320 ; 
Test4_m1418 = int_temp1;
main_Child_temp22 = Test4_m1418 ; 
q11 = main_Child_temp22;
Child_temp1 = p10;
int_temp1 = Child_temp1.func3(q11 );
q11 = int_temp1;
} 
} 
class Parent { 
int m3 ; 
public int func1 ( int a4 ) { 
int y5 ; 
int m6 ; 
int int_temp1 ;
int int_temp2 ;
int int_temp3 ;
int int_temp4 ;
boolean boolean_temp1 ;
boolean boolean_temp2 ;
boolean boolean_temp3 ;
boolean boolean_temp4 ;
int[] intarr_temp1 ;
int[] intarr_temp2 ;
int[] intarr_temp3 ;
int[] intarr_temp4 ;
Wild Wild_temp1 ;
Wild Wild_temp2 ;
Wild Wild_temp3 ;
Wild Wild_temp4 ;
Parent Parent_temp1 ;
Parent Parent_temp2 ;
Parent Parent_temp3 ;
Parent Parent_temp4 ;
Test4 Test4_temp1 ;
Test4 Test4_temp2 ;
Test4 Test4_temp3 ;
Test4 Test4_temp4 ;
Child Child_temp1 ;
Child Child_temp2 ;
Child Child_temp3 ;
Child Child_temp4 ;
int_temp1 = 2;
y5 = int_temp1;
int_temp1 = y5 * a4 ; 
m6 = int_temp1;
return m6 ; 
} 
public int func3 ( int a7 ) { 
int y8 ; 
int m9 ; 
int int_temp1 ;
int int_temp2 ;
int int_temp3 ;
int int_temp4 ;
boolean boolean_temp1 ;
boolean boolean_temp2 ;
boolean boolean_temp3 ;
boolean boolean_temp4 ;
int[] intarr_temp1 ;
int[] intarr_temp2 ;
int[] intarr_temp3 ;
int[] intarr_temp4 ;
Wild Wild_temp1 ;
Wild Wild_temp2 ;
Wild Wild_temp3 ;
Wild Wild_temp4 ;
Parent Parent_temp1 ;
Parent Parent_temp2 ;
Parent Parent_temp3 ;
Parent Parent_temp4 ;
Test4 Test4_temp1 ;
Test4 Test4_temp2 ;
Test4 Test4_temp3 ;
Test4 Test4_temp4 ;
Child Child_temp1 ;
Child Child_temp2 ;
Child Child_temp3 ;
Child Child_temp4 ;
int_temp1 = 2;
y8 = int_temp1;
int_temp1 = y8 * a7 ; 
m9 = int_temp1;
int_temp1 = 1;
y8 = int_temp1;
int_temp1 = m9 + y8 ; 
m9 = int_temp1;
return m9 ; 
} 
} 
class Child extends Parent { 
public int func1 ( int a12 ) { 
int y13 ; 
int m14 ; 
int int_temp1 ;
int int_temp2 ;
int int_temp3 ;
int int_temp4 ;
boolean boolean_temp1 ;
boolean boolean_temp2 ;
boolean boolean_temp3 ;
boolean boolean_temp4 ;
int[] intarr_temp1 ;
int[] intarr_temp2 ;
int[] intarr_temp3 ;
int[] intarr_temp4 ;
Wild Wild_temp1 ;
Wild Wild_temp2 ;
Wild Wild_temp3 ;
Wild Wild_temp4 ;
Parent Parent_temp1 ;
Parent Parent_temp2 ;
Parent Parent_temp3 ;
Parent Parent_temp4 ;
Test4 Test4_temp1 ;
Test4 Test4_temp2 ;
Test4 Test4_temp3 ;
Test4 Test4_temp4 ;
Child Child_temp1 ;
Child Child_temp2 ;
Child Child_temp3 ;
Child Child_temp4 ;
int_temp1 = 2;
y13 = int_temp1;
int_temp1 = y13 * a12 ; 
m14 = int_temp1;
int_temp1 = 1;
y13 = int_temp1;
int_temp1 = m14 + y13 ; 
m14 = int_temp1;
return m14 ; 
} 
public int func2 ( int a15 ) { 
int y16 ; 
int m17 ; 
int int_temp1 ;
int int_temp2 ;
int int_temp3 ;
int int_temp4 ;
boolean boolean_temp1 ;
boolean boolean_temp2 ;
boolean boolean_temp3 ;
boolean boolean_temp4 ;
int[] intarr_temp1 ;
int[] intarr_temp2 ;
int[] intarr_temp3 ;
int[] intarr_temp4 ;
Wild Wild_temp1 ;
Wild Wild_temp2 ;
Wild Wild_temp3 ;
Wild Wild_temp4 ;
Parent Parent_temp1 ;
Parent Parent_temp2 ;
Parent Parent_temp3 ;
Parent Parent_temp4 ;
Test4 Test4_temp1 ;
Test4 Test4_temp2 ;
Test4 Test4_temp3 ;
Test4 Test4_temp4 ;
Child Child_temp1 ;
Child Child_temp2 ;
Child Child_temp3 ;
Child Child_temp4 ;
int_temp1 = 2;
y16 = int_temp1;
int_temp1 = y16 * a15 ; 
m17 = int_temp1;
int_temp1 = 1;
y16 = int_temp1;
int_temp1 = m17 + y16 ; 
m17 = int_temp1;
return m17 ; 
} 
} 
class Wild extends Child { 
public int func3 ( int a0 ) { 
int y1 ; 
int m2 ; 
int int_temp1 ;
int int_temp2 ;
int int_temp3 ;
int int_temp4 ;
boolean boolean_temp1 ;
boolean boolean_temp2 ;
boolean boolean_temp3 ;
boolean boolean_temp4 ;
int[] intarr_temp1 ;
int[] intarr_temp2 ;
int[] intarr_temp3 ;
int[] intarr_temp4 ;
Wild Wild_temp1 ;
Wild Wild_temp2 ;
Wild Wild_temp3 ;
Wild Wild_temp4 ;
Parent Parent_temp1 ;
Parent Parent_temp2 ;
Parent Parent_temp3 ;
Parent Parent_temp4 ;
Test4 Test4_temp1 ;
Test4 Test4_temp2 ;
Test4 Test4_temp3 ;
Test4 Test4_temp4 ;
Child Child_temp1 ;
Child Child_temp2 ;
Child Child_temp3 ;
Child Child_temp4 ;
int_temp1 = 2;
y1 = int_temp1;
int_temp1 = y1 * a0 ; 
m2 = int_temp1;
int_temp1 = 1;
y1 = int_temp1;
int_temp1 = m2 + y1 ; 
m2 = int_temp1;
return m2 ; 
} 
} 
 